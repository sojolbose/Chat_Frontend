{"version":3,"sources":["logo.svg","chat/Channel.js","chat/ChannelList.js","chat/Message.js","chat/MessagesPanel.js","chat/Chat.js","chat/ChatLogin.js","App.js","reportWebVitals.js","index.js"],"names":["Channel","click","props","onClick","id","className","this","name","React","Component","ChannelList","handleClick","onSelectChannel","list","channels","map","c","participants","Message","senderName","text","MessagesPanel","messageText","state","inputRef","current","value","onSendMessage","socketID","handleKeyPress","e","charCode","console","log","createRef","messages","m","Box","TextField","type","onKeyPress","Button","variant","color","Chat","configureSocket","socket","socketClient","on","handleLogin","username","loadChannels","channel","handleChannelSelect","forEach","setState","chatMembers","message","channel_id","push","find","emit","ack","socketId","handleSendMessage","a","fetch","then","response","json","data","ChatLogin","handleChange","target","handleSubmit","submitted","label","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.520b16d9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\"\r\n\r\nclass Channel extends React.Component{\r\n\r\n    click = () =>{\r\n        this.props.onClick(this.props.id)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"channel-item\" onClick={this.click}>\r\n                <div>{this.props.name}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Channel","import React from \"react\"\r\nimport Channel from \"./Channel\"\r\n\r\n\r\nexport class ChannelList extends React.Component{\r\n\r\n    handleClick = (id) =>{\r\n        this.props.onSelectChannel(id);\r\n    }\r\n\r\n    render(){\r\n        let list = \"There is no channels to show\";\r\n        if(this.props.channels){\r\n            list = this.props.channels.map(c =>{\r\n                return(\r\n                    <Channel key={c.id} id={c.id} name={c.name} participants={c.participants} onClick={this.handleClick} />\r\n                )\r\n            })\r\n        }\r\n\r\n        return(\r\n            <div className= \"channel-list\">\r\n                {list}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChannelList","import React from \"react\"\r\n\r\nclass Message extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"message-item\">\r\n                <div className=\"message-sender\">{this.props.senderName}</div>\r\n                <span className=\"message-text\">{this.props.text}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message","import React from \"react\"\r\nimport Message from \"./Message\"\r\nimport { Box, TextField, Button} from \"@material-ui/core\"\r\n\r\nclass MessagesPanel extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            inputRef: React.createRef()\r\n        }\r\n    }\r\n\r\n    handleClick = ()=>{\r\n        const messageText = this.state.inputRef.current.value;\r\n        this.state.inputRef.current.value = ''\r\n        this.props.onSendMessage(messageText, this.props.socketID, this.props.senderName)  \r\n    }\r\n\r\n    handleKeyPress = (e) =>{\r\n        if(e.charCode === 13){\r\n            console.log(\"Enter pressed!!\")\r\n            this.handleClick();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log(this.props.messages)\r\n        let list = <div className=\"no-content-message\">There is no messages to show</div>\r\n        if(this.props.messages){\r\n            list = this.props.messages.map(m=>{\r\n                return <Message key={m.id} id={m.id} senderName = {m.senderName} text={m.text} />\r\n            })\r\n        }\r\n\r\n        return(\r\n            <div className=\"messages-panel\">\r\n                <div className=\"messages-list\">{list}</div>\r\n                <Box className=\"messages-input\">\r\n                    {/* <input type=\"text\" className=\"message-text\" /> */}\r\n                    <TextField inputRef={this.state.inputRef} id=\"standard-basic\" className = \"message-input-text\" type=\"text\" name=\"message\" onKeyPress={this.handleKeyPress}/>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClick} >\r\n                        Send\r\n                    </Button>\r\n                </Box>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default MessagesPanel","import React from \"react\"\r\nimport ChannelList from \"./ChannelList\"\r\nimport MessagesPanel from \"./MessagesPanel\"\r\nimport \"./chat.scss\"\r\nimport socketClient from \"socket.io-client\"\r\nconst SERVER = \"http://localhost:8080\"\r\n\r\n\r\nexport class Chat extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            username : null,\r\n            channels : null,\r\n            channel : null,\r\n            messages: null\r\n        }\r\n        var socket;\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.configureSocket();\r\n    }\r\n\r\n\r\n    configureSocket = () => {\r\n        var socket = socketClient(SERVER);\r\n\r\n\r\n        socket.on('connection', () => {\r\n            this.handleLogin(this.props.username, socket.id)\r\n            this.loadChannels();\r\n            console.log(socket.id)\r\n            if (this.state.channel) {\r\n                this.handleChannelSelect(this.state.channel.id);\r\n            }\r\n        });\r\n\r\n\r\n        socket.on('channel', channel => {\r\n            let channels = this.state.channels;\r\n            channels.forEach(c => {\r\n                if (c.id === channel.id) {\r\n                    c.participants = channel.participants;\r\n                    c.socket = channel.socket;\r\n                }\r\n            });\r\n            this.setState({ channels });\r\n        });\r\n\r\n\r\n        socket.on(\"members-update\", chatMembers =>{\r\n            this.setState({\r\n                channels:chatMembers\r\n            },()=>{console.log(this.state.channels)})\r\n        })\r\n\r\n\r\n        socket.on('message', message => {\r\n            let channels = this.state.channels\r\n            channels.forEach(c => {\r\n                if (c.id === message.channel_id) {\r\n                    if (!c.messages) {\r\n                        c.messages = [message];\r\n                    } else {\r\n                        c.messages.push(message);\r\n                    }\r\n                }\r\n            });\r\n            this.setState({ channels });\r\n        });\r\n\r\n        socket.on(\"messages-update\", messages=>{\r\n            this.setState({\r\n                messages: messages\r\n            })\r\n        })\r\n\r\n\r\n        this.socket = socket;\r\n    }\r\n\r\n    handleChannelSelect = id => {\r\n        console.log(\"inside handle channnel\")\r\n        let channel = this.state.channels.find(c => {\r\n            return c.id === id;\r\n        });\r\n        this.setState({ channel }, ()=>{console.log(this.state)});\r\n        this.socket.emit('channel-join', id, ack => {\r\n        });\r\n    }\r\n\r\n    handleLogin = (username, socketId) =>{\r\n        this.setState({username: username})\r\n        console.log(\"inside handle login\")\r\n        console.log(socketId)\r\n        this.socket.emit(\"add-user\", username, socketId, ack =>{  \r\n        });\r\n    }\r\n\r\n    // handleSendMessage = (channel_id, text) => {\r\n    //     this.socket.emit('send-message', { channel_id, text, senderName: this.socket.id, id: Date.now() });\r\n    // }\r\n\r\n    handleSendMessage = (text, id, senderName) =>{\r\n        console.log(text)\r\n        console.log(id)\r\n        this.socket.emit(\"send-message\", text, id, senderName, ack=>{});\r\n    }\r\n\r\n    loadChannels = async () =>{\r\n        console.log(\"inside loadChannels\")\r\n        fetch(\"http://localhost:8080/getChannels\")\r\n            .then(async response =>{\r\n                let data = await response.json();\r\n                console.log(data.channels)\r\n                this.setState({\r\n                    channels: data.channels\r\n                })\r\n            })\r\n        }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"chat-app\">\r\n                <ChannelList  channels={this.state.channels} onSelectChannel={this.handleChannelSelect}/>\r\n                {this.socket?\r\n                    <MessagesPanel \r\n                        messages = {this.state.messages} \r\n                        socketID={this.socket.id} \r\n                        onSendMessage={this.handleSendMessage}\r\n                        senderName = {this.state.username}\r\n                    />\r\n                    :null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat","import React from \"react\"\r\nimport Chat from \"./Chat\"\r\nimport { Box, Button, Input, TextField } from \"@material-ui/core\"\r\nimport \"./ChatLogin.scss\"\r\n\r\n\r\nclass ChatLogin extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            submitted: false,\r\n            inputRef: React.createRef()\r\n        }\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n        const name = e.target.value;\r\n        this.setState({\r\n            username:name,  \r\n        }, ()=>{\r\n            console.log(this.state)\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        // const name = document.querySelector(\".inputUserName\").value;\r\n        const name = this.state.inputRef.current.value;\r\n        console.log(name)\r\n        this.setState({\r\n            username: name,\r\n            submitted: true\r\n        })\r\n\r\n    }\r\n\r\n    handleKeyPress = (e) =>{\r\n        if(e.charCode === 13){\r\n            console.log(\"Enter pressed!!\")\r\n            this.handleSubmit();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"main-container\">\r\n                {this.state.submitted===false?\r\n                    <Box className=\"chat-login\">\r\n                        <TextField inputRef={this.state.inputRef} id=\"outlined-basic\" onKeyPress={this.handleKeyPress} variant=\"outlined\" label=\"Chat Alias\" className = \"inputUserName\" type=\"text\" name=\"username\"/>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit} className=\"submitUserName\">Enter Chat Room</Button>\r\n                    </Box>\r\n                    :null\r\n                }\r\n                \r\n                {this.state.submitted?<Chat username={this.state.username}/>: null}\r\n                {/* <Chat username={this.state.username}/> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ChatLogin","import React from \"react\"\nimport socketClient from \"socket.io-client\"\nimport logo from './logo.svg';\nimport './App.css';\nimport Chat from \"./chat/Chat\"\nimport ChatLogin from \"./chat/ChatLogin\"\n\n\nconst SERVER = \"http://localhost:8080\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Chat /> */}\n      <ChatLogin />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}